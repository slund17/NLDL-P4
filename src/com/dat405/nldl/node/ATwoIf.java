/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.dat405.nldl.node;

import com.dat405.nldl.analysis.*;

@SuppressWarnings("nls")
public final class ATwoIf extends PIf
{
    private TInterfaceType _interfaceType_;
    private TConst _first_;
    private TConst _second_;

    public ATwoIf()
    {
        // Constructor
    }

    public ATwoIf(
        @SuppressWarnings("hiding") TInterfaceType _interfaceType_,
        @SuppressWarnings("hiding") TConst _first_,
        @SuppressWarnings("hiding") TConst _second_)
    {
        // Constructor
        setInterfaceType(_interfaceType_);

        setFirst(_first_);

        setSecond(_second_);

    }

    @Override
    public Object clone()
    {
        return new ATwoIf(
            cloneNode(this._interfaceType_),
            cloneNode(this._first_),
            cloneNode(this._second_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATwoIf(this);
    }

    public TInterfaceType getInterfaceType()
    {
        return this._interfaceType_;
    }

    public void setInterfaceType(TInterfaceType node)
    {
        if(this._interfaceType_ != null)
        {
            this._interfaceType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._interfaceType_ = node;
    }

    public TConst getFirst()
    {
        return this._first_;
    }

    public void setFirst(TConst node)
    {
        if(this._first_ != null)
        {
            this._first_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._first_ = node;
    }

    public TConst getSecond()
    {
        return this._second_;
    }

    public void setSecond(TConst node)
    {
        if(this._second_ != null)
        {
            this._second_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._second_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._interfaceType_)
            + toString(this._first_)
            + toString(this._second_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._interfaceType_ == child)
        {
            this._interfaceType_ = null;
            return;
        }

        if(this._first_ == child)
        {
            this._first_ = null;
            return;
        }

        if(this._second_ == child)
        {
            this._second_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._interfaceType_ == oldChild)
        {
            setInterfaceType((TInterfaceType) newChild);
            return;
        }

        if(this._first_ == oldChild)
        {
            setFirst((TConst) newChild);
            return;
        }

        if(this._second_ == oldChild)
        {
            setSecond((TConst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
